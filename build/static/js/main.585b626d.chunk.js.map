{"version":3,"sources":["components/Layout.tsx","components/AboutUs.tsx","components/OurMission.tsx","components/OurProducts.tsx","components/GlobalNav.tsx","components/BuddhaBackground.tsx","App.tsx","styles/theme.ts","index.tsx"],"names":["Layout","_ref","children","_jsxs","Container","maxWidth","_jsx","CssBaseline","style","padding","backgroundColor","borderRadius","boxShadow","AboutUs","Box","sx","textAlign","src","alt","width","maxHeight","objectFit","marginBottom","Typography","variant","gutterBottom","paragraph","OurMission","OurProducts","align","Grid","container","spacing","name","description","image","map","product","index","item","xs","sm","md","Card","CardMedia","component","height","CardContent","color","GlobalNav","AppBar","position","Toolbar","flexGrow","Button","Link","to","BuddhaBackground","xmlns","top","left","zIndex","background","id","x1","y1","x2","y2","offset","stopColor","fill","opacity","Array","from","length","_","x","Math","random","y","rotateDuration","href","transform","attributeName","attributeType","type","dur","repeatCount","App","Router","Switch","Route","path","exact","theme","createTheme","palette","primary","main","secondary","default","paper","text","typography","fontFamily","h1","fontSize","fontWeight","h2","body1","shape","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"6MAceA,MAXyCC,IAAmB,IAAlB,SAAEC,GAAUD,EACjE,OACIE,eAACC,IAAS,CAACC,SAAS,KAAIH,SAAA,CACpBI,cAACC,IAAW,IACZD,cAAA,OAAKE,MAAO,CAAEC,QAAS,OAAQC,gBAAiB,UAAWC,aAAc,MAAOC,UAAW,gCAAiCV,SACvHA,MAEG,E,kBCiBLW,MAxBWA,IAElBV,eAACW,IAAG,CAACC,GAAI,CAAEN,QAAS,EAAGO,UAAW,SAAUN,gBAAiB,UAAWC,aAAc,GAAIT,SAAA,CACtFI,cAAA,OACIW,IAAI,oCACJC,IAAI,WACJV,MAAO,CAAEW,MAAO,OAAQC,UAAW,QAASC,UAAW,QAASV,aAAc,MAAOW,aAAc,UAEvGhB,cAACiB,IAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAvB,SAAC,uBAGtCI,cAACiB,IAAU,CAACC,QAAQ,QAAQE,WAAS,EAAAxB,SAAC,2NAGtCI,cAACiB,IAAU,CAACC,QAAQ,QAAQE,WAAS,EAAAxB,SAAC,2LAGtCI,cAACiB,IAAU,CAACC,QAAQ,QAAQE,WAAS,EAAAxB,SAAC,yHCSnCyB,MA1BcA,IAErBxB,eAACW,IAAG,CAACC,GAAI,CAAEN,QAAS,EAAGO,UAAW,SAAUN,gBAAiB,UAAWC,aAAc,GAAIT,SAAA,CACtFI,cAACiB,IAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAvB,SAAC,gBAGtCI,cAACiB,IAAU,CAACC,QAAQ,QAAQE,WAAS,EAAAxB,SAAC,gWAMtCI,cAACiB,IAAU,CAACC,QAAQ,QAAQE,WAAS,EAAAxB,SAAC,wSAKtCI,cAAA,OACIW,IAAI,mCACJC,IAAI,cACJV,MAAO,CAAEW,MAAO,OAAQE,UAAW,QAASV,aAAc,MAAOW,aAAc,a,oCC2ChFM,MA/DeA,IAmCtBzB,eAACW,IAAG,CAACC,GAAI,CAAEN,QAAS,EAAGC,gBAAiB,WAAYR,SAAA,CAChDI,cAACiB,IAAU,CAACC,QAAQ,KAAKK,MAAM,SAASJ,cAAY,EAAAvB,SAAC,iBAGrDI,cAACwB,IAAI,CAACC,WAAS,EAACC,QAAS,EAAE9B,SAtClB,CACb,CACI+B,KAAM,aACNC,YAAa,gFACbC,MAAO,uCAEX,CACIF,KAAM,iBACNC,YAAa,mFACbC,MAAO,2CAEX,CACIF,KAAM,kBACNC,YAAa,sEACbC,MAAO,4CAEX,CACIF,KAAM,qBACNC,YAAa,2EACbC,MAAO,+CAEX,CACIF,KAAM,kBACNC,YAAa,qEACbC,MAAO,4CAEX,CACIF,KAAM,uBACNC,YAAa,uDACbC,MAAO,kDAUOC,KAAI,CAACC,EAASC,IACpBhC,cAACwB,IAAI,CAACS,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAExC,SAC5BC,eAACwC,IAAI,CAAAzC,SAAA,CACDI,cAACsC,IAAS,CACNC,UAAU,MACVC,OAAO,MACPX,MAAOE,EAAQF,MACfjB,IAAKmB,EAAQJ,OAEjB9B,eAAC4C,IAAW,CAAA7C,SAAA,CACRI,cAACiB,IAAU,CAACC,QAAQ,KAAItB,SAAEmC,EAAQJ,OAClC3B,cAACiB,IAAU,CAACC,QAAQ,QAAQwB,MAAM,gBAAe9C,SAC5CmC,EAAQH,qBAXaI,U,2BCjB3CW,MAvBaA,IAExB3C,cAAC4C,IAAM,CAACC,SAAS,SAASH,MAAM,UAAS9C,SACvCC,eAACiD,IAAO,CAAAlD,SAAA,CACNI,cAACiB,IAAU,CAACC,QAAQ,KAAKT,GAAI,CAAEsC,SAAU,GAAInD,SAAC,iBAG9CC,eAACW,IAAG,CAAAZ,SAAA,CACFI,cAACgD,IAAM,CAACN,MAAM,UAAUH,UAAWU,IAAMC,GAAG,gBAAetD,SAAC,aAG5DI,cAACgD,IAAM,CAACN,MAAM,UAAUH,UAAWU,IAAMC,GAAG,wBAAuBtD,SAAC,gBAGpEI,cAACgD,IAAM,CAACN,MAAM,UAAUH,UAAWU,IAAMC,GAAG,yBAAwBtD,SAAC,yBC6ChEuD,MA7DoBA,IAK/BtD,eAAA,OACEuD,MAAM,6BACNvC,MAAM,OACN2B,OAAO,OACPtC,MAAO,CACL2C,SAAU,QACVQ,IAAK,EACLC,KAAM,EACNC,QAAS,EACTC,WAAY,WACZ5D,SAAA,CAEFI,cAAA,QAAAJ,SACEC,eAAA,kBAAgB4D,GAAG,WAAWC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,KAAIjE,SAAA,CAC7DI,cAAA,QAAM8D,OAAO,KAAK5D,MAAO,CAAE6D,UAAW,aACtC/D,cAAA,QAAM8D,OAAO,MAAM5D,MAAO,CAAE6D,UAAW,aACvC/D,cAAA,QAAM8D,OAAO,OAAO5D,MAAO,CAAE6D,UAAW,kBAG5C/D,cAAA,QAAMa,MAAM,OAAO2B,OAAO,OAAOwB,KAAK,mBAGtChE,cAAA,KAAGiE,QAAQ,MAAKrE,SAEbsE,MAAMC,KAAK,CAAEC,OA3BD,MA2BuB,CAACC,EAAGrC,KACtC,MAAMsC,EAAoB,IAAhBC,KAAKC,SACTC,EAAoB,IAAhBF,KAAKC,SACTE,EAAiC,GAAhBH,KAAKC,SAAgB,GAE5C,OACExE,cAAA,SAEE2E,KApCO,uCAqCPL,EAAGA,EACHG,EAAGA,EACHjC,OAAO,KACP3B,MAAM,KACN+D,UAAW,aAAaN,MAAMG,KAAK7E,SAEnCI,cAAA,oBACE6E,cAAc,YACdC,cAAc,MACdC,KAAK,SACLZ,KAAM,KAAKG,KAAKG,IAChBvB,GAAI,OAAOoB,KAAKG,IAChBO,IAAK,GAAGN,KACRO,YAAY,gBAfTjD,EAiBC,SC9BLkD,MAhBOA,IAElBrF,eAACsF,IAAM,CAAAvF,SAAA,CACLI,cAACmD,EAAgB,IACjBnD,cAAC2C,EAAS,IACV3C,cAACN,EAAM,CAAAE,SACLC,eAACuF,IAAM,CAAAxF,SAAA,CACLI,cAACqF,IAAK,CAACC,KAAK,gBAAgBC,OAAK,EAAChD,UAAWhC,IAC7CP,cAACqF,IAAK,CAACC,KAAK,wBAAwB/C,UAAWlB,IAC/CrB,cAACqF,IAAK,CAACC,KAAK,yBAAyB/C,UAAWjB,Y,iBCuB3CkE,MAvCDC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERpC,WAAY,CACVsC,QAAS,UACTC,MAAO,WAETC,KAAM,CACJL,QAAS,UACTE,UAAW,YAGfI,WAAY,CACVC,WAAY,6CACZC,GAAI,CACFC,SAAU,SACVC,WAAY,IACZ3D,MAAO,WAET4D,GAAI,CACFF,SAAU,OACVC,WAAY,IACZ3D,MAAO,WAET6D,MAAO,CACLH,SAAU,OACV1D,MAAO,YAGX8D,MAAO,CACLnG,aAAc,KC/BlBoG,IAASC,OACP1G,cAAC2G,IAAa,CAACnB,MAAOA,EAAM5F,SAC1BI,cAACkF,EAAG,MAEN0B,SAASC,eAAe,Q","file":"static/js/main.585b626d.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, CssBaseline } from '@mui/material';\n\nconst Layout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    return (\n        <Container maxWidth=\"lg\">\n            <CssBaseline />\n            <div style={{ padding: '20px', backgroundColor: '#f5f5f5', borderRadius: '8px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}>\n                {children}\n            </div>\n        </Container>\n    );\n};\n\nexport default Layout;","import React from 'react';\nimport { Box, Typography } from '@mui/material';\n\nconst AboutUs: React.FC = () => {\n    return (\n        <Box sx={{ padding: 4, textAlign: 'center', backgroundColor: '#f5f5f5', borderRadius: 2 }}>\n            <img \n                src=\"/inner-crunch/assets/about-us.jpg\" \n                alt=\"About Us\" \n                style={{ width: '100%', maxHeight: '300px', objectFit: 'cover', borderRadius: '8px', marginBottom: '20px' }} \n            />\n            <Typography variant=\"h4\" gutterBottom>\n                About Inner Crunch\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                At Inner Crunch, we believe that every bite of cereal can be a journey towards mindfulness and well-being. Inspired by the teachings of Buddha, our brand embodies the principles of simplicity, balance, and harmony. \n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Our cereals are crafted with care, using only the finest natural ingredients. We aim to nourish not just the body, but also the soul, promoting a lifestyle of health and tranquility.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                Join us on this path to inner peace and crunchiness, where every bowl is a step towards a more mindful existence.\n            </Typography>\n        </Box>\n    );\n};\n\nexport default AboutUs;","import React from 'react';\nimport { Box, Typography } from '@mui/material';\n\nconst OurMission: React.FC = () => {\n    return (\n        <Box sx={{ padding: 4, textAlign: 'center', backgroundColor: '#f5f5f5', borderRadius: 2 }}>\n            <Typography variant=\"h4\" gutterBottom>\n                Our Mission\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                At Inner Crunch, we believe in nourishing the body and soul. Our mission is to provide wholesome, \n                delicious cereals that not only satisfy your hunger but also promote mindfulness and well-being. \n                Inspired by the teachings of Buddha, we strive to create products that encourage a balanced lifestyle, \n                fostering harmony between nature and nourishment.\n            </Typography>\n            <Typography variant=\"body1\" paragraph>\n                We are committed to using natural ingredients, embracing sustainability, and supporting local farmers. \n                Just as Buddha taught us to find joy in simplicity, we aim to bring joy to your breakfast table with \n                every crunchy bite. Join us on this journey towards a more mindful and fulfilling life.\n            </Typography>\n            <img \n                src=\"/inner-crunch/assets/mission.jpg\" \n                alt=\"Our Mission\" \n                style={{ width: '100%', objectFit: 'cover', borderRadius: '8px', marginBottom: '20px' }} \n            />\n        </Box>\n    );\n};\n\nexport default OurMission;","import React from 'react';\nimport { Box, Typography, Grid, Card, CardMedia, CardContent } from '@mui/material';\n\nconst OurProducts: React.FC = () => {\n    const products = [\n        { \n            name: 'Zen Crunch', \n            description: 'A harmonious blend of whole grains and nuts for a balanced start to your day.', \n            image: '/inner-crunch/assets/zen-crunch.jpg' \n        },\n        { \n            name: 'Mindful Muesli', \n            description: 'A thoughtful mix of oats, seeds, and dried fruits to nourish your body and soul.', \n            image: '/inner-crunch/assets/mindful-muesli.jpg' \n        },\n        { \n            name: 'Serenity Flakes', \n            description: 'Light and crispy flakes that bring peace to your breakfast routine.', \n            image: '/inner-crunch/assets/serenity-flakes.jpg' \n        },\n        { \n            name: 'Buddha Berry Bliss', \n            description: 'A delightful combination of berries and grains that awakens your senses.', \n            image: '/inner-crunch/assets/buddha-berry-bliss.jpg' \n        },\n        { \n            name: 'Harmony Granola', \n            description: 'A crunchy mix of granola and honey for a sweet and balanced treat.', \n            image: '/inner-crunch/assets/harmony-granola.jpg' \n        },\n        { \n            name: 'Tranquility Toasties', \n            description: 'Toasted cereal bites infused with calming chamomile.', \n            image: '/inner-crunch/assets/tranquility-toasties.jpg' \n        },\n    ];\n\n    return (\n        <Box sx={{ padding: 4, backgroundColor: '#f5f5f5' }}>\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                Our Products\n            </Typography>\n            <Grid container spacing={4}>\n                {products.map((product, index) => (\n                    <Grid item xs={12} sm={6} md={4} key={index}>\n                        <Card>\n                            <CardMedia\n                                component=\"img\"\n                                height=\"140\"\n                                image={product.image}\n                                alt={product.name}\n                            />\n                            <CardContent>\n                                <Typography variant=\"h6\">{product.name}</Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {product.description}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </Box>\n    );\n};\n\nexport default OurProducts;","import React from 'react';\nimport { AppBar, Toolbar, Typography, Button, Box } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst GlobalNav: React.FC = () => {\n  return (\n    <AppBar position=\"static\" color=\"primary\">\n      <Toolbar>\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n          Inner Crunch\n        </Typography>\n        <Box>\n          <Button color=\"inherit\" component={Link} to=\"/inner-crunch\">\n            About Us\n          </Button>\n          <Button color=\"inherit\" component={Link} to=\"/inner-crunch/mission\">\n            Our Mission\n          </Button>\n          <Button color=\"inherit\" component={Link} to=\"/inner-crunch/products\">\n            Our Products\n          </Button>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default GlobalNav;\n","import React from 'react';\n\nconst BuddhaBackground: React.FC = () => {\n  const buddhaIcon = '/inner-crunch/assets/buddha-icon.png'; // Path to your Buddha icon PNG\n  const numBuddhas = 200;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"100%\"\n      height=\"100%\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: -1,\n        background: '#f0f0f0', // Light grey background\n      }}\n    >\n      <defs>\n        <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" style={{ stopColor: '#a7d1ab' }} />\n          <stop offset=\"50%\" style={{ stopColor: '#c8e6c9' }} />\n          <stop offset=\"100%\" style={{ stopColor: '#a7d1ab' }} />\n        </linearGradient>\n      </defs>\n      <rect width=\"100%\" height=\"100%\" fill=\"url(#gradient)\">\n      </rect>\n      {/* Small Buddha Icons */}\n      <g opacity=\"0.4\">\n        {/* Generate multiple Buddha Icons */}\n        {Array.from({ length: numBuddhas }, (_, index) => {\n          const x = Math.random() * 5000; // Random X position\n          const y = Math.random() * 1000; // Random Y position\n          const rotateDuration = Math.random() * 20 + 10; // Random rotation duration\n\n          return (\n            <image\n              key={index}\n              href={buddhaIcon}\n              x={x}\n              y={y}\n              height=\"90\" // Increased height\n              width=\"90\"  // Increased width\n              transform={`translate(${x}, ${y})`}\n            >\n              <animateTransform\n                attributeName=\"transform\"\n                attributeType=\"XML\"\n                type=\"rotate\"\n                from={`0 ${x} ${y}`}\n                to={`360 ${x} ${y}`}\n                dur={`${rotateDuration}s`}\n                repeatCount=\"indefinite\"\n              />\n            </image>\n          );\n        })}\n      </g>\n    </svg>\n  );\n};\n\nexport default BuddhaBackground;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport AboutUs from './components/AboutUs';\nimport OurMission from './components/OurMission';\nimport OurProducts from './components/OurProducts';\nimport GlobalNav from './components/GlobalNav';\nimport BuddhaBackground from './components/BuddhaBackground';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <BuddhaBackground />\n      <GlobalNav />\n      <Layout>\n        <Switch>\n          <Route path=\"/inner-crunch\" exact component={AboutUs} />\n          <Route path=\"/inner-crunch/mission\" component={OurMission} />\n          <Route path=\"/inner-crunch/products\" component={OurProducts} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#4caf50', // A calming green color\n    },\n    secondary: {\n      main: '#ffeb3b', // A soft yellow for highlights\n    },\n    background: {\n      default: '#f5f5f5', // Light background for a serene feel\n      paper: '#ffffff', // White background for cards and sections\n    },\n    text: {\n      primary: '#333333', // Dark text for readability\n      secondary: '#666666', // Lighter text for secondary information\n    },\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    h1: {\n      fontSize: '2.5rem',\n      fontWeight: 700,\n      color: '#4caf50',\n    },\n    h2: {\n      fontSize: '2rem',\n      fontWeight: 600,\n      color: '#333333',\n    },\n    body1: {\n      fontSize: '1rem',\n      color: '#666666',\n    },\n  },\n  shape: {\n    borderRadius: 8, // Rounded corners for a softer look\n  },\n});\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './styles/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}